---
apiVersion: v1
kind: Service
metadata:
  name: kafka-hs
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: server
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  # maxUnavailable calculate from `replicas`
  maxUnavailable: 1
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - kafka-zk
                topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kubernetes-kafka
        image: "wurstmeister/kafka:0.10.1.1"
        resources:
          requests:
            memory: "1.0Gi"
            cpu: 100m
        ports:
        - containerPort: 9092
          name: server
        env:
          - name: KAFKA_LOG_DIRS
            value: /kafka/data
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: ZOOKEEPER_SERVICE
            value: kafka-zk-hs
        command:
        - bash
        - /tmp/script/start-kafka.sh
        volumeMounts:
        - name: logs
          mountPath: /kafka
        - name: start-script
          mountPath: /tmp/script
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
      - name: start-script
        configMap:
          name: kafka-script-configmap
  volumeClaimTemplates:
  - metadata:
      name: logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
